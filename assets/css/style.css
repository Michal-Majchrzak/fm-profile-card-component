* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

img {
    display: block;
}

:root {
    --color-dark-cyan: hsl(185, 75%, 39%);
    --color-white: hsl(0, 0%, 100%);
    --color-very-dark-blue: hsl(229, 23%, 23%);
    --color-dark-blue: hsl(227, 10%, 46%);
    --color-light-gray: hsl(228, 9%, 92%);
    /* Avatar */
    --avatar-size: 6rem;
    --border-width: 0.3125rem;
    --final-avatar-size: calc(var(--avatar-size) + 2 * var(--border-width));
    /* Background */
    --bg-circle-size: 61.125rem;
}

.text-bold {
    color: var(--color-very-dark-blue);
    font-size: 1.125rem;
    font-weight: 700;
    line-height: 100%;
}

.text-wide {
    font-size: 0.625rem;
    line-height: 100%;
    letter-spacing: 0.09375rem;
}

.text-small {
    font-size: 0.875rem;
    line-height: 100%;
}

/* Background circle elements */

body::before {
    background-image: linear-gradient(10deg, hsla(195, 91%, 37%, 0.01), hsl(174, 100%, 66%));
    border-radius: 100%;
    content: "";
    opacity: 0.25;
    z-index: -1;
    width: var(--bg-circle-size);
    height: var(--bg-circle-size);
    position: fixed;
    top: -31.8125rem;
    /*  calc function -> calculates left offset of the element based on its size and vieport witdh.
    This left offset will anchor right edge of the element 27px to the left of viewport center.

        min function  -> will apply calucated left offset value as long as viewport width is less than 1440px,
    for larger vieports element will be placed in the same position -285px.
    
    The same idea is applied in right offset for the body::after element.
    */
    left: min(-17.8125rem, calc((50vw - 1.6875rem) - var(--bg-circle-size)));
}

body::after {
    background-image: linear-gradient(-100deg, hsla(195, 91%, 37%, 0.01), hsl(174, 100%, 66%));
    border-radius: 100%;
    content: "";
    opacity: 0.25;
    z-index: -1;
    width: var(--bg-circle-size);
    height: var(--bg-circle-size);
    position: fixed;
    bottom: -39.5rem;
    right: min(-14.375rem, calc((50vw + 1.75rem) - var(--bg-circle-size))); 
}

body {
    background-color: var(--color-dark-cyan);
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    /* font */
    color: var(--color-dark-blue);
    font-family: Kumbh Sans, sans-serif;
    font-size: 1rem;
    font-weight: 400;
    line-height: 100%;
}

.card {
    background-color: var(--color-white);
    border-radius: 0.9375rem;
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    align-items: center;
    padding-bottom: 1.5rem;
    width: clamp(20.375rem, calc(100vw - 3rem), 21.875rem);
    box-shadow: 0px 50px 100px -20px hsla(197, 85%, 20%, 0.5);
}

.card .card-header {
    object-fit: cover;
    height: 8.75rem;
    width: 100%;
    border-radius: 0.9375rem 0.9375rem 0 0;
    margin-bottom: calc(var(--avatar-size) / 2 - var(--border-width));
}

.card .card-avatar {
    position: absolute;
    /* 8.75rem is height of the first image */
    top: calc(8.75rem - var(--final-avatar-size) / 2);
    height: var(--final-avatar-size);
    width: var(--final-avatar-size);
    border: var(--border-width) solid var(--color-white);
    border-radius: 100%;
}

.card .card-name-location {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.75rem;
    padding-bottom: 0.3125rem;
}

.card .card-title {
    display: flex;
    align-items: flex-end;
    gap: 0.6875rem;
    font-size: 1.125rem;
    font-weight: 400;
    line-height: normal;
}

.card .card-title span {
    line-height: normal;
}

.card .horizontal-line {
    background-color: var(--color-light-gray);
    border: none;
    height: 0.0625rem;
    width: 100%;
}
.card .stats-section {
    display: flex;
    gap: clamp(1.5rem, 8.5vw, 2.125rem);
}

.card .stats-box {
    display: flex;
    flex-direction: column;
    gap: 0.625rem;
    align-items: center;
    padding-bottom: 0.125rem;
    width: 4rem;
}